@page "/Tracage"
@using stopcovid.Models
@using System.Linq
@inject HttpClient Http

<html>
<body>

<h1>Le tracage </h1>

<p>Choisissez la région ou  vous souhaitiez partir parmi les @totalDesCas.ToString() .</p>

<form action="/action_page.php">
  <label for="région">Choisissez une région:</label>
  <select name="région" id="région"  @bind="CheckSelected">
    @if (totalDesCas > 0)
    {
      foreach (var ec in ensembleCas)
      {
          <option value="@ec.RegionId"> @ec.Regions </option>
      }
    }
    
  </select>
  <br><br>
  @if (@IsDangerousRegion)
  {
    <img src="/images/1200px-Achtung.svg.png" alt="Danger" width="460" height="345">
    <p>
      Attention cette region et les emplacements de cette region sont dangereux et beaucoup de gens de cette region sont porteur de virus sans symptômes le risque de se contaminer est très élevé 
      portez toujours vos masques laissez une distance entre vous de 1,5 M au miminum lavez vos mains portez avec vous 
      un désinfectant ne pas toucher votre visage avant de lavez vos mains et si vous avez contatez une personne direct et vous avez  senti de ces symptômes suivant
      il faut se faire tester ou se confiner pendant 14 jours au minimum : 
    
      fièvre
      toux sèche
      fatigue 
    </p>
  }
  else
  {
      <img src="/images/OIP.jfif" alt="No Danger" width="460" height="345">
        <p>
La situation épidémiologique dans cette region est stable les emplacements de cette region et les gents de cette region sont peux 

porteurs d'infection sortez quand vous voulez mais soyez prudents et attentifs laissez une distance entre vous de 1,5 M 
au miminum lavez vos mains portez avec vous un désinfectant nous pas toucher votre visage avant de lavez vos mains et si vous avez senti de ces symptômes suivant
      il faut se faire tester ou se confiner pendant 14 jours au minimum :
      fièvre
      toux sèche
      fatigue 

        </p>

  }
  <h1>@totalDesCasEnRegion</h1>
  
  <h1>@selectedRegionName</h1>
  

</form>



</body>
</html>

@code {
  private List<Ensemblecas> ensembleCas;
      private int selectedRegion = 1;
      private string selectedRegionName = "Casa";
      private int totalDesCasEnRegion = 0;
      private int totalDesCas = 0;
      private string selectedItem = "";
      private bool IsDangerousRegion = false;
      protected override async Task OnInitializedAsync()
      {
          ensembleCas = await Http.GetFromJsonAsync<List<Ensemblecas>>("sample-data/ensemble.json");
          ensembleCas = ensembleCas.OrderBy(e => e.Regions).ToList();
         

          totalDesCas = ensembleCas.Count();
      }

      private string CheckSelected
    {
        get
        {
            return selectedItem;
        }
        set
        {
            ChangeEventArgs selectedEventArgs = new ChangeEventArgs();
            selectedEventArgs.Value = value;
            OnChangeSelected(selectedEventArgs);
        }
    }

    private void OnChangeSelected(ChangeEventArgs e)
    {
        if (e.Value.ToString() != string.Empty)
        {
            selectedItem = e.Value.ToString();
            var region = ensembleCas.Where(ex => ex.RegionId.ToString() == selectedItem).FirstOrDefault();
            totalDesCasEnRegion = region.Cas;
            selectedRegionName = region.Regions;
            if(region.Cas > 1000)
            {
              IsDangerousRegion = true;
            }
            else
            {
                IsDangerousRegion = false;
            }

        }
    }
}
