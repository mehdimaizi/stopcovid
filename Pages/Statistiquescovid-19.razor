@using stopcovid.Models
@using System.Linq

@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util


@page "/statistiquescovid-19"
<h1>Derniers nouvelle du covid-19</h1>
@inject HttpClient Http
<p> Cette page vous permet d'avoir les statistiques du virus covid-19 au maroc par r√©gion  </p>

@if (covidStats == null)
{
    <p><em>Veuillez patienter, chargement des donees...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Cas</th>
                <th>Morts</th>
                <th>Guerison</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var covidstat in covidStats)
            {
                <tr>
                    <td>@covidstat.Date.ToShortDateString()</td>
                    <td>@covidstat.Cas</td>
                    <td>@covidstat.Morts</td>
                    <td>@covidstat.Guerisons</td>
                </tr>
            }
        </tbody>
    </table>
    
}
<ChartJsPieChart @ref="_pieChartJs" Config="@_config" Width="600" Height="300"/>
@code {
    private CovidStat[] covidStats;
    private PieConfig _config;
    private ChartJsPieChart _pieChartJs;
    protected override async Task OnInitializedAsync()
    {
        covidStats = await Http.GetFromJsonAsync<CovidStat[]>("sample-data/stat.json");
        covidStats = covidStats.OrderByDescending(c => c.Date).ToArray();
    }
    protected override void OnInitialized()
{
    _config = new PieConfig
    {
        Options = new PieOptions
        {
            Title = new OptionsTitle
            {
                Display = true,
                Text = "Sample chart from Blazor"
            },
            Responsive = true,
            Animation = new ArcAnimation
            {
                AnimateRotate = true,
                AnimateScale = true
            }
        }
    };

    _config.Data.Labels.AddRange(new[] { "A", "B", "C", "D" });

    var pieSet = new PieDataset
    {
        BackgroundColor = new[] { ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString() },
        BorderWidth = 0,
        HoverBackgroundColor = ColorUtil.RandomColorString(),
        HoverBorderColor = ColorUtil.RandomColorString(),
        HoverBorderWidth = 1,
        BorderColor = "#ffffff",
    };

    pieSet.Data.AddRange(new double[] { 4, 5, 6, 7 });
    _config.Data.Datasets.Add(pieSet);
}
    
    
}
