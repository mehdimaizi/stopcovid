@using stopcovid.Models
@using System.Linq

@using ChartJs.Blazor.ChartJS.BarChart
@using ChartJs.Blazor.ChartJS.BarChart.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes.Ticks
@using ChartJs.Blazor.ChartJS.Common.Time
@using ChartJs.Blazor.ChartJS.Common.Enums
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util


@page "/statistiquescovid-19"
<h1>Statistiques du Covid-19 au Maroc</h1>
@inject HttpClient Http
<p> Cette page vous permet d'avoir les statistiques du virus covid-19 au Maroc   </p>

@if (covidStats == null)
{
    <p><em>Veuillez patienter, chargement des donees...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Cas</th>
                <th>Morts</th>
                <th>Guerison</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var covidstat in covidStats)
            {
                <tr>
                    <td>@covidstat.Date.ToShortDateString()</td>
                    <td>@covidstat.Cas</td>
                    <td>@covidstat.Morts</td>
                    <td>@covidstat.Guerisons</td>
                </tr>
            }
        </tbody>
    </table>
    
}

 // UN AUTRE GRAPHE
        
       
    }
       
    
    protected override void OnInitialized()
    {
        _config = new BarConfig
        {
            Options = new BarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Statistiques Codid-19"
                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
                    {
                        new BarTimeAxis
                        {
                            BarPercentage = 0.75,
                            Time = new TimeOptions
                            {
                                Unit = TimeMeasurement.Day
                            },
                            Offset = true
                        }
                },
                YAxes = new List<CartesianAxis>
                {
                        new BarLinearCartesianAxis
                        {
                            Ticks = new LinearCartesianTicks
                            {
                                BeginAtZero = true
                            }
                        }
                    }
                },
                Responsive = true
            }
        };

        
        
        
    }
    
}